{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,GAFMC,EAEO,QAFKC,SAASC,cAAcF,IAAnC,IAAAA,EAGZ,IAAIG,EAAa,KACbC,EAAO,KACPC,EAAS,KACTC,EAAQ,KAkCZ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACLN,EACFO,EAAApB,GAASqB,OAAOC,QAAQ,uBAAqBX,QAAiBC,OAE9DQ,EAAApB,GAASqB,OAAOE,QAAQ,sBAAoBZ,QAAeC,MAAU,GAEtEA,EAAM,G,CAvCbV,EAAKsB,SAAWC,MAAOC,IACrBA,EAAIC,iBAEJ,IAAIC,EAAW,IAAIC,SAAS3B,GAC5BI,EAAawB,OAAOF,EAASG,IAAI,UACjCxB,EAAOuB,OAAOF,EAASG,IAAI,SAC3BvB,EAASsB,OAAOF,EAASG,IAAI,WAE7BtB,EAAQH,EAER,IAAK,IAAI0B,EAAI,EAAGA,GAAKxB,EAAQwB,GAAK,EAEhCtB,EAAcsB,EAAGvB,GAAOwB,MAAK,CAAEC,EAAUC,KACtCf,EAAApB,GAASqB,OAAOC,QAAQ,uBAAqBY,QAAiBC,MAAU,IAE1EC,OAAM,CAACC,EAAUC,KACflB,EAAApB,GAASqB,OAAOE,QAAQ,sBAAoBc,QAAiBC,MAAU,IAEzEC,SAAQ,KACLrC,EAAKsC,QACLlC,EAAa,KACbC,EAAO,KACPC,EAAS,IAAI,IAGjBC,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet getEl = selector => document.querySelector(selector)\n\nconst form = getEl('.form')\nlet firstDelay = null;\nlet step = null;\nlet amount = null;\nlet delay = null;\nlet position = 1;\n\n\nform.onsubmit = async (evt) => {\n  evt.preventDefault();\n\n  let formData = new FormData(form);\n  firstDelay = Number(formData.get('delay'))\n  step = Number(formData.get('step'))\n  amount = Number(formData.get('amount'))\n  \n  delay = firstDelay;\n  \n  for (let i = 1; i <= amount; i += 1) {\n\n    createPromise(i, delay).then(( position, delay) => {\n      (Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n    })\n    .catch((position, delay) => {\n      (Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n    })\n    .finally(() => {\n        form.reset();\n        firstDelay = null;\n        step = null;\n        amount = null\n      })\n    \n    delay += step;\n   }\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n    }, delay)\n    })\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","selector","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$createPromise","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","failure","onsubmit","async","evt","preventDefault","formData","FormData","Number","get","i","then","position1","delay1","catch","position2","delay2","finally","reset"],"version":3,"file":"03-promises.faf1877c.js.map"}